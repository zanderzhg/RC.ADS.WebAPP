// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RC.ADS.Data;

namespace RC.ADS.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180726032617_editOrderAudits")]
    partial class editOrderAudits
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Account.Account", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AccountSum");

                    b.Property<string>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Account.AccountInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountInfoChangeTpye");

                    b.Property<string>("Describe");

                    b.Property<decimal>("Money");

                    b.Property<string>("OwnerAccountId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerAccountId");

                    b.ToTable("AccountInfos");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Article.Article", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArticleContent");

                    b.Property<string>("ArticleIco");

                    b.Property<string>("ArticleImage");

                    b.Property<int>("ArticleIndex");

                    b.Property<string>("ArticleName");

                    b.Property<string>("ArticleTypeEntityId");

                    b.HasKey("Id");

                    b.HasIndex("ArticleTypeEntityId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Article.ArticleType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Describe");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ArticleTypes");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Integral.Integral", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IntegralSum");

                    b.Property<string>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Integrals");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Integral.IntegralInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Describe");

                    b.Property<int>("IntegralInfoChangeType");

                    b.Property<string>("OwnerIntegralId");

                    b.Property<int>("Score");

                    b.HasKey("Id");

                    b.HasIndex("OwnerIntegralId");

                    b.ToTable("IntegralInfos");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Menber.Menber", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ManberName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("ReferrerId");

                    b.HasKey("Id");

                    b.HasIndex("ReferrerId");

                    b.ToTable("Menbers");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Order.Order", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("OwnerId");

                    b.Property<decimal>("Price");

                    b.Property<int>("orderStatu");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Order.OrderAudit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuditEntityId");

                    b.Property<DateTime>("Creatime");

                    b.Property<int>("OrderStatus");

                    b.HasKey("Id");

                    b.HasIndex("AuditEntityId");

                    b.ToTable("OrderAudits");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Account.Account", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Menber.Menber", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Account.AccountInfo", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Account.Account", "OwnerAccount")
                        .WithMany("AccountInfoList")
                        .HasForeignKey("OwnerAccountId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Article.Article", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Article.ArticleType", "ArticleTypeEntity")
                        .WithMany()
                        .HasForeignKey("ArticleTypeEntityId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Integral.Integral", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Menber.Menber", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Integral.IntegralInfo", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Integral.Integral", "OwnerIntegral")
                        .WithMany()
                        .HasForeignKey("OwnerIntegralId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Menber.Menber", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Menber.Menber", "Referrer")
                        .WithMany()
                        .HasForeignKey("ReferrerId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Order.Order", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Menber.Menber", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("RC.ADS.Data.Entity.AD_Order.OrderAudit", b =>
                {
                    b.HasOne("RC.ADS.Data.Entity.AD_Order.Order", "AuditEntity")
                        .WithMany()
                        .HasForeignKey("AuditEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
